<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="book">

	<sql id="select-bookall">
		SELECT * FROM BOOK
	</sql>

	<sql id="where-goodsnum">
		WHERE BOOK_NUM = #{BOOK_NUM} AND BOOK_USE_YN = '1'
	</sql>

	<!-- 도서 목록 -->
	<select id="selectBooksAll" resultType="BooksModel">
		<include refid="select-bookall"/>
		ORDER BY BOOK_DATE DESC
	</select>
	
	<select id="selectBookList" resultType="BooksModel" parameterType="String">
		<include refid="select-bookall" />
		WHERE BOOK_USE_YN = '1'
		<if test="value!=null">
			AND BOOK_CATEGORY = #{value}
		</if>
		ORDER BY BOOK_DATE DESC
	</select>
	
	<!-- 도서 검색 목록 -->
	<select id="selectSearchList" parameterType="map" resultType="BooksModel">
		<include refid="select-bookall" />
		WHERE BOOK_USE_YN = '1'
		<choose>
			<when test="searchNum == 0">
				AND( BOOK_NAME like '%'||#{searchKeyword}||'%' 
				OR BOOK_AUTH like '%'||#{searchKeyword}||'%' 
				OR COMPANY_ID like '%'||#{searchKeyword}||'%' )
			</when>
			<when test="searchNum == 1">
				AND BOOK_NAME like '%'||#{searchKeyword}||'%' 
			</when>
			<when test="searchNum == 2">
				AND BOOK_AUTH like '%'||#{searchKeyword}||'%' 
			</when>
			<otherwise>
				AND COMPANY_ID like '%'||#{searchKeyword}||'%'
			</otherwise>
		</choose>
		ORDER BY BOOK_DATE DESC
	</select>

	<!-- 도서 상세보기 -->
	<select id="selectBookOne" resultType="BooksModel">
		<include refid="select-bookall" />
		<include refid="where-goodsnum" />
	</select>
	
	<select id="adminSelectOne" resultType="BooksModel">
		<include refid="select-bookall" />
		WHERE BOOK_NUM = #{BOOK_NUM}
	</select>
	
	<select id="selectNewest" resultType="BooksModel">
		<!-- select rownum, a.* from (select * from book order by book_date desc) a where rownum=1 -->
		select BOOK_NUM, BOOK_CATEGORY, BOOK_NAME, BOOK_CONTENT, BOOK_PRICE, BOOK_IMAGE, BOOK_SELL_COUNT, BOOK_BASE_COUNT, 
			BOOK_CURRENT_COUNT, BOOK_PUBLISH_DATE, BOOK_DATE, COMPANY_ID, BOOK_AUTH, BOOK_USE_YN from 
				(select rownum, a.* from (select * from book order by book_date desc) a where rownum=1)
	</select>
	
	<!-- 리뷰 리스트 -->
	<select id="selectReviewList" resultType="ReviewModel">
		SELECT * FROM REVIEW
		WHERE BOOK_NUM = #{BOOK_NUM} ORDER BY REVIEW_REGDATE DESC
	</select>

	<!-- 리뷰 작성 -->
	<insert id="reviewWrite" parameterType="ReviewModel">
		INSERT INTO
		REVIEW(REVIEW_NUM, BOOK_NUM, MEMBER_ID, REVIEW_PW, REVIEW_CONTENT,
		REVIEW_REGDATE, STAR_POINT)
		VALUES(REVIEW_NUM_SEQ.nextVal, #{book_num},
		#{member_id}, #{review_pw}, #{review_content}, sysdate,
		#{star_point})
	</insert>
	
	<!-- 도서 작성 -->
	<insert id="writeBook" parameterType="BooksModel"> 
		INSERT INTO BOOK(BOOK_NUM, BOOK_CATEGORY, BOOK_NAME, BOOK_CONTENT, BOOK_PRICE, BOOK_IMAGE, BOOK_SELL_COUNT, BOOK_BASE_COUNT, 
							BOOK_CURRENT_COUNT, BOOK_PUBLISH_DATE, BOOK_DATE, COMPANY_ID, BOOK_AUTH, BOOK_USE_YN) 
		VALUES (BOOK_NUM_SEQ.NEXTVAL, #{book_category}, #{book_name}, #{book_content}, #{book_price}, #{book_image}, #{book_sell_count}, 
				#{book_base_count}, #{book_current_count}, #{book_publish_date}, sysdate, #{company_id}, #{book_auth}, #{book_use_yn}) 
	</insert>
	
	<!-- 도서 정보 수정 -->
	<update id="modifyBook" parameterType="BooksModel"> 
		UPDATE BOOK SET BOOK_CATEGORY = #{book_category}, 
						BOOK_NAME = #{book_name}, BOOK_CONTENT = #{book_content}, 
						BOOK_PRICE = #{book_price}, BOOK_IMAGE = #{book_image}, 
						BOOK_SELL_COUNT = #{book_sell_count}, BOOK_BASE_COUNT = #{book_base_count}, 
						BOOK_CURRENT_COUNT = #{book_current_count}, BOOK_PUBLISH_DATE = #{book_publish_date}, 
						COMPANY_ID = #{company_id}, BOOK_AUTH = #{book_auth}, BOOK_USE_YN = #{book_use_yn} 
					WHERE BOOK_NUM = #{book_num} 
	</update>
	
	<!-- 도서 삭제 -->
	<delete id="deleteBook"> 
		DELETE FROM BOOK WHERE BOOK_NUM = #{book_num} 
	</delete>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteRevice"> 
		DELETE FROM REVIEW WHERE REVIEW_NUM = #{review_num} 
	</delete>
	
</mapper>